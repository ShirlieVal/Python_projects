# -*- coding: utf-8 -*-
"""Tiktaktoe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1bDUd5ZXmTHMEbgdYmQhGLB6fXF-Zb7WR
"""

#Autor: Shirlie Victoria Alvarez
#Date : 28/01/2022

from random import randrange

def display_board(board):
    #The function accepts one parameter containing the board's current status
    #and prints it out to the console
    
    rayasymás = ('+'+'-'*7)*3+'+'
    espacios = (' '*25)
    columnas = ('|'+' '*7)*3+'|'
    
    print_dict = {'rayas': rayasymás, 'columnas':columnas, 'num': 'numero', 'columnas1':columnas}

    j = 0
    for i in range(3):
        for llave in print_dict.keys():
                
            if llave == 'num':
                print('|'+' '*3,board[j][0],' '*3+'|'+' '*3,board[j][1],' '*3+'|'+' '*3,board[j][2],' '*3 + '|', sep = "")
            else:
                print(print_dict[llave])
                
        if j == 2:
            j = 0
        else:
            j+=1
            
                
    print(rayasymás)

def make_list_of_free_fields(board):
    #The function browses the board and builds a list of all the free squares;
    #the list consists of tuples, while each tuple is a pair of row and column numbers
    free = ()
        
    for i in range(3):
        for j in range(3):
            if board[i][j] != 'o' and board[i][j] != 'x':
                free+=((i,j),)

                
    return free


def enter_move(board):
   #The function accepts the board's current status, asks the user about their move,
   #checks the input, and updates the board according to the user's decision
    while True:
        try:
                num = int(input('Ingrese un número del 1 al 9: '))
                if num == 1 : 
                    i = 0
                    j = 0

                elif num == 2:
                    i = 0
                    j = 1

                elif num == 3:
                    i = 0
                    j = 2

                elif num == 4:
                    i = 1
                    j = 0

                elif num == 5:
                    i = 1
                    j = 1

                elif num == 6:
                    i = 1
                    j = 2

                elif num == 7:
                    i = 2
                    j = 0

                elif num == 8:
                    i = 2
                    j = 1

                elif num == 9:
                    i = 2
                    j = 2

                else:
                    continue


                free = make_list_of_free_fields(board)

                if (i, j) in free:
                      board[i][j] = 'o'
                      display_board(board)
                      return board

            
        except:
            print('Ingrese un número válido')
    


    
def draw_move(board):
    #The function draws the computer's move and updates the board

    while True:
                num = randrange(1,10,1)

                if num == 1 : 
                    i = 0
                    j = 0

                elif num == 2:
                    i = 0
                    j = 1

                elif num == 3:
                    i = 0
                    j = 2

                elif num == 4:
                    i = 1
                    j = 0

                elif num == 5:
                    i = 1
                    j = 1

                elif num == 6:
                    i = 1
                    j = 2

                elif num == 7:
                    i = 2
                    j = 0

                elif num == 8:
                    i = 2
                    j = 1

                elif num == 9:
                    i = 2
                    j = 2

                else:
                    continue

                free = make_list_of_free_fields(board)

                if (i, j) in free:
                      board[i][j] = 'x'
                      display_board(board)
                      return board

            




def victory_for(board,sign):
    #The function analyzes the board's status in order to check if
    #the player using 'o's or 'x's has won the game

    if sign == 'x':
        if (board[0][0]=='x' and board[0][1]=='x' and board[0][2]=='x')\
        or (board[1][0]=='x' and board[1][1]=='x' and board[1][2]=='x')\
        or (board[2][0]=='x' and board[2][1]=='x' and board[2][2]=='x')\
        or (board[0][0]=='x' and board[1][0]=='x' and board[2][0]=='x')\
        or (board[0][1]=='x' and board[1][1]=='x' and board[2][1]=='x')\
        or (board[0][2]=='x' and board[1][2]=='x' and board[2][2]=='x')\
        or (board[0][0]=='x' and board[1][1]=='x' and board[2][2]=='x')\
        or (board[0][2]=='x' and board[1][1]=='x' and board[2][0]=='x'):
            win = 'x'
        else:
            win = 'n'
            
    elif sign =='o':
        if (board[0][0]=='o' and board[0][1]=='o' and board[0][2]=='o')\
        or (board[1][0]=='o' and board[1][1]=='o' and board[1][2]=='o')\
        or (board[2][0]=='o' and board[2][1]=='o' and board[2][2]=='o')\
        or (board[0][0]=='o' and board[1][0]=='o' and board[2][0]=='o')\
        or (board[0][1]=='o' and board[1][1]=='o' and board[2][1]=='o')\
        or (board[0][2]=='o' and board[1][2]=='o' and board[2][2]=='o')\
        or (board[0][0]=='o' and board[1][1]=='o' and board[2][2]=='o')\
        or (board[0][2]=='o' and board[1][1]=='o' and board[2][0]=='o'):
           win = 'o' 
        else:
            win = 'n'
    
    return win    




board = [["EMPTY" for i in range(3)] for j in range(3)]
num = 1
for row in range(3):
    for column in range(3):
        board[row][column] = num
        num +=1
            
#display_board(board)

win = 'n'
while(win=='n'):
  print("Turno de la computadora")
  board = draw_move(board)
  free = make_list_of_free_fields(board)
  win = victory_for(board,'x')

  if win== 'x':
    print("El ganador es la computadora!")
    break
  elif free == ():
    print("No hay ganador")
    break

  print("Turno del usuario")
  board = enter_move(board)
  free = make_list_of_free_fields(board)
  win = victory_for(board, 'o')

  if win == 'o':
    print("El ganador es el usuario!")
    break
  elif free == ():
    print("No hay ganador")
    break